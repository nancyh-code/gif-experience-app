{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","console","log","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mNAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCsBLO,EArBM,SAACf,GAAc,IAAD,EACPd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAkBjC,OAZAC,qBAAU,WAERpB,EAAQC,GACLoB,MAAK,SAAAC,GACJH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAId,CAAChB,IAEGiB,GCHMK,EAfK,SAAC,GAAwB,IAAtBX,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIhC,OAFAqB,QAAQC,IAAI,CAAEb,KAAIC,QAAOV,QAGvB,sBAAKuB,UAAU,yCAAf,UACE,qBAAKC,IAAKxB,EAAKyB,IAAKf,IACpB,4BAAIA,QC6BKgB,EAlCC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EASEe,EAAaf,GAAjCa,EATkB,EASxBN,KAAcS,EATU,EASVA,QAGtB,OAFAO,QAAQC,IAAIR,GAGV,qCACE,oBAAIS,UAAU,oCAAd,SAAmDzB,IACjDgB,GAAW,mBAAGS,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGIZ,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAGMA,GAFCA,EAAIC,aCYRkB,EAjCM,WAAO,IAAD,EAEW3C,mBAAS,CAAC,WAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAUzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIS,EAAWe,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCnBnB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9c0c5bb1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=RXFZVPgs4LHrAJGGBlTluwpSMZBoh6px`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n\r\n    }\r\n  })\r\n  return gifs;\r\n\r\n\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      })\r\n\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n//import PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n\r\n  console.log({ id, title, url });\r\n\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n/* GifGridItem.propTypes = {\r\n\r\n} */\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n  /*\r\n   const [images, setImages] = useState([]);\r\n   \r\n     useEffect(() => {\r\n       getGifs(category)\r\n         .then(setImages)\r\n     }, [category])\r\n    */\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  console.log(loading);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className='card-grid'>\r\n\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              //img={img}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div >\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Dr Who']);\r\n\r\n  /*  const handleAdd = () => {\r\n     //setCategories(['Hunter', ...])\r\n     setCategories(categories => [...categories, 'Hunter'])\r\n   }\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category} />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\n//GifExpertApp.propTypes = {\r\n\r\n//}\r\n\r\nexport default GifExpertApp\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}